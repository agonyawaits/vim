syntax on
set path=.,**
set nocompatible
set number relativenumber
set noerrorbells
set tabstop=4 expandtab shiftwidth=4 smarttab
set cindent
set showmatch 
set ruler
set ignorecase
set wrap
set incsearch
set exrc
set wildmenu
set noswapfile
set colorcolumn=80
set backspace=start,eol,indent
if has("gui_running")
    set guioptions=
    if has("mac")
        set fu
        set guifont=Liberation\ Mono:h15
    else
        set guifont=Liberation\ Mono\ 11
    endif
endif
colorscheme gruberdarker
let g:netrw_banner=0
let g:netrw_liststyle=1
let g:netrw_sizestyle="H"
let g:netrw_browse_split=1
let $RTP=split(&runtimepath, ',')[0]
let $RC="$HOME/.vim/vimrc"
au FileType make setlocal noexpandtab
au FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
augroup skeletons
    au!
    au BufNewFile *.* silent! execute '0r $RTP/templates/skeleton.'.expand("<afile>:e")
augroup END
imap <A-t> <></><Esc>5hdiwp3lpT>i
imap <C-t> <></><Esc>5hdiwp3lpT>i<CR><Esc>O

call plug#begin('$RTP/plugged')
Plug 'neoclide/coc.nvim', {'branch': 'release'}
call plug#end()

" coc
let g:coc_global_extensions = ['coc-pairs', 'coc-tsserver', 'coc-eslint', 'coc-json', 'coc-jedi']
" Use K to show documentation in preview window
nnoremap <silent> K :call <SID>show_documentation()<CR>
function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction
" Some servers have issues with backup files, see #649
set nobackup
set nowritebackup
" Better display for messages
set cmdheight=2
" You will have bad experience for diagnostic messages when it's default 4000.
set updatetime=300
" don't give |ins-completion-menu| messages.
set shortmess+=c
" always show signcolumns
set signcolumn=yes
" Remap keys for gotos
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
" Use tab for trigger completion with characters ahead and navigate.
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
" Highlight the symbol and its references when holding the cursor.
autocmd CursorHold * silent call CocActionAsync('highlight')
